Goクイズで学ぶMethod sets
入門Go言語仕様輪読会
20:00 15 Apr 2021

task4233
@task4233

* 自己紹介

*task4233*(Takashi*MIMA)*

趣味と実益を兼ねてGoを書いています

.link https://go-review.googlesource.com/c/go/+/288472 Go本体へのコントリビュート経験があります

.image ./images/go-proposal.PNG 400 682

* ゴールとアジェンダ
*ゴール*
Goにおけるinterfaceの「実装」に利用されるメソッドセットを理解すること

*アジェンダ*
- メソッドに関するおさらい
- interfaceに関するおさらい
- 本日理解していただくGoクイズの出題
- Goクイズに関するMethod Setsの説明
- まとめのGoクイズの出題

* メソッドセットが理解できると何が嬉しいのか
Goの仕様を理解する助けになる

- 特にMethod callsやInterface typesにおける実装の部分

Goを使用する際にメソッドがメモリ管理している

* おさらい：メソッドとは

defined typeかdefined typeを指すポインタを、メソッドのレシーバとして持つ関数

.play ./examples/method.go

* 2種類のレシーバ：ポインタレシーバと値レシーバ

ポインタレシーバとは、ポインタ型のレシーバのこと
値レシーバとは、値型のレシーバのこと

.play ./examples/method2.go

* コラム: ポインタレシーバと値レシーバでなぜ結果が変わるのか
値レシーバはレシーバの値をコピーして呼び出すのに対し、
ポインタレシーバは値が格納されているアドレスを保持しているため

* メソッドセットとは

メソッドセットは、型に関連付けられたメソッドの集合のこと

- interface型のメソッドセットは、そのinterface定義

- 型 `T` のメソッドセットは、レシーバ型 `T` で宣言された全てのメソッドセット

- 型 `*T` のメソッドセットは、レシーバ型 `T` または `*T` で宣言された全てのメソッドセット

- 埋め込み型については、更なる規則が適用される(今回は時間が足りないので割愛)

- それ以外の型は、空のメソッドセットを持つ

* Goクイズ - 空のinterface

1. compile error
2. run-time panic
3. exit with code 0 (正常終了)

.play ./examples/empty_interface/quiz.go

* 空のinterface - 解答と解説

- `interface` 以外の型は、デフォルトで空のメソッドセットを持つ

- 空のインタフェースは何もメソッドを含まないので、全ての値を代入可能

.play ./examples/empty_interface/answer.go

* コラム: 空のインタフェースへの代入

.play ./examples/column/empty_interface.go

* Goクイズ - methodの実装



* コラム: インタフェースの実装

.play ./examples/column/check_implemented.go


Errorメソッドを実装しているのでOK


Errorメソッドのレシーバの型が、代入しようとしている型と異なるのでNG
https://play.golang.org/p/xpDMhK21fe0

同じ型にすればおｋ
https://play.golang.org/p/YwdF-e4RqC4

レシーバの型が *error 型なら、 error型のメソッドセットも含むのでOK
https://play.golang.org/p/bA-0hptxZuh

レシーバの型が *error 型なら、 *error型のメソッドセットも含むのでOK
https://play.golang.org/p/YwdF-e4RqC4

